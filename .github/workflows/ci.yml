name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Check formatting
      run: cargo fmt --all --check
      
    - name: Run Clippy
      run: cargo clippy --workspace --all-targets --all-features -- -D warnings
      
    - name: Build
      run: cargo build --workspace --verbose
      
    - name: Run unit tests
      run: cargo test --workspace --lib --verbose
      
    - name: Run integration tests
      run: cargo test --workspace --test "*" --verbose
      
    - name: Test generate functionality
      run: |
        # Test basic generate functionality
        cargo run --bin lawkit -- generate benf --samples 35 --seed 12345 > /tmp/test_benf.txt
        cargo run --bin lawkit -- benf /tmp/test_benf.txt
        
        # Test generateâ†’analyze pipeline (allow exit codes 0-12 for normal)
        cargo run --bin lawkit -- generate normal --samples 100 --mean 50 --stddev 10 --seed 42 > /tmp/test_normal.txt
        cargo run --bin lawkit -- normal /tmp/test_normal.txt || test $? -le 12
        
        # Test selftest functionality
        cargo run --bin lawkit -- selftest
      
    - name: Test CLI examples from README
      run: |
        # Basic analysis examples (use --min-count to allow small datasets)
        echo "1234 5678 9012 3456" | cargo run --bin lawkit -- benf --min-count 4 || test $? -le 12
        
        # Generate and analyze workflow
        cargo run --bin lawkit -- generate benf --samples 100 --seed readme > /tmp/readme_test.txt
        cargo run --bin lawkit -- benf /tmp/readme_test.txt --format json
        
        # Multi-law comparison
        cargo run --bin lawkit -- compare /tmp/readme_test.txt
        
        # List functionality
        cargo run --bin lawkit -- list